name: "KiCad"
scopeName: "source.kicad"
fileTypes: ["kicad_mod", "kicad_pcb", "kicad_wks", "fp-lib-table"]
firstLineMatch: "^\\s*\\((?:kicad_pcb|fp_lib_table)\\s+"
patterns: [{
	name: "meta.expression.layers.kicad"
	begin: "(\\()\\s*(layers)(?=\\s|$|\\()"
	end:   "\\)"
	beginCaptures:
		1: name: "punctuation.section.expression.begin.kicad"
		2: name: "storage.type.class.layers.kicad"
	endCaptures:
		0: name: "punctuation.section.expression.end.kicad"
	patterns: [{
		name: "meta.expression.layer.kicad"
		begin: "(\\()\\s*(\\d+)(?:\\s+|(?=$|\\())"
		end:   "\\)"
		beginCaptures:
			1: name: "punctuation.section.expression.begin.kicad"
			2: name: "constant.numeric.integer.decimal.kicad"
		endCaptures:
			0: name: "punctuation.section.expression.end.kicad"
		patterns: [{
			match: "\\G\\s*(-?(?:(?!\\s)[\\0-\\x7F])+)"
			captures:
				1: name: "entity.name.function.kicad"
		}, include: "#shared"]
	}, include: "#shared"]
},{
	name: "meta.expression.kicad"
	begin: "\\("
	end:   "\\)"
	beginCaptures: 0: name: "punctuation.section.expression.begin.kicad"
	endCaptures:   0: name: "punctuation.section.expression.end.kicad"
	patterns: [
		{
			match: "\\G\\s*(kicad_pcb|module|page_layout|fp_lib_table)(?=\\s|$|\\()"
			captures:
				1: name: "storage.type.class.kicad"
		}
		{
			match: "\\G\\s*(-?(?:(?!\\s)[\\0-\\x7F])+)"
			captures:
				1: name: "entity.name.function.kicad"
		}
		{include: "#shared"}
	]
}]


repository:

	shared:
		patterns: [
			{include: "#values"}
			{include: "$self"}
		]


	values:
		patterns: [
			{
				name: "constant.numeric.float.decimal.kicad"
				match: "[-+]?\\d*\\.\\d+"
			}
			{
				name: "constant.numeric.integer.decimal.kicad"
				match: "[-+]?\\d+(?=\\s|\\))"
			}
			{
				name: "constant.numeric.integer.hex.kicad"
				match: "0x[A-Fa-f0-9]+(?:_[A-Fa-f0-9]+)*"
			}
			{
				name: "constant.language.boolean.$1.kicad"
				match: "(?<=\\s|\\(|\\))(true|false|yes|no)(?=\\s|\\(|\\))"
			}
			{
				name: "string.quoted.double.empty.kicad"
				match: '(")(")'
				captures:
					1: name: "punctuation.definition.string.begin.kicad"
					2: name: "punctuation.definition.string.end.kicad"
			}
			{
				name: "string.quoted.double.kicad"
				begin: '"'
				end:   '"'
				beginCaptures: 0: name: "punctuation.definition.string.begin.kicad"
				endCaptures:   0: name: "punctuation.definition.string.end.kicad"
				patterns: [
					{
						name: "constant.character.escape.kicad"
						match: "\\\\\\S"
					}
					{
						name: "invalid.illegal.unclosed.string.kicad"
						match: '\\G(?:[^"\\\\]|\\\\.)+$'
					}
				]
			}
			{
				name: "variable.parameter.identifier.kicad"
				match: "[^\\s\\(\\)]+"
			}
		]
